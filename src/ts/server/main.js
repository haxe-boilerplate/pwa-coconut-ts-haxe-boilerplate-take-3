// Generated by Haxe 4.0.0-rc.2+92c7833
(function ($hx_exports, $global) { "use strict";
$hx_exports["server"] = $hx_exports["server"] || {};
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var httpstatus__$HttpStatusMessage_HttpStatusMessage_$Impl_$ = {};
httpstatus__$HttpStatusMessage_HttpStatusMessage_$Impl_$.__name__ = true;
httpstatus__$HttpStatusMessage_HttpStatusMessage_$Impl_$.fromCode = function(statusCode) {
	switch(statusCode) {
	case 100:
		return "Continue";
	case 101:
		return "Switching Protocols";
	case 102:
		return "Processing";
	case 200:
		return "OK";
	case 201:
		return "Created";
	case 202:
		return "Accepted";
	case 203:
		return "Non-Authoritative Information";
	case 204:
		return "No Content";
	case 205:
		return "Reset Content";
	case 206:
		return "Partial Content";
	case 207:
		return "Multi-Status";
	case 208:
		return "Already Reported";
	case 226:
		return "IM Used";
	case 300:
		return "Multiple Choices";
	case 301:
		return "Moved Permanently";
	case 302:
		return "Found";
	case 303:
		return "See Other";
	case 304:
		return "Not Modified";
	case 305:
		return "Use Proxy";
	case 306:
		return "Switch Proxy";
	case 307:
		return "Temporary Redirect";
	case 308:
		return "Permanent Redirect";
	case 400:
		return "Bad Request";
	case 401:
		return "Unauthorized";
	case 402:
		return "Payment Required";
	case 403:
		return "Forbidden";
	case 404:
		return "Not Found";
	case 405:
		return "Method Not Allowed";
	case 406:
		return "Not Acceptable";
	case 407:
		return "Proxy Authentication Required";
	case 408:
		return "Request Timeout";
	case 409:
		return "Conflict";
	case 410:
		return "Gone";
	case 411:
		return "Length Required";
	case 412:
		return "Precondition Failed";
	case 413:
		return "Payload Too Large";
	case 414:
		return "URI Too Long";
	case 415:
		return "Unsupported Media Type";
	case 416:
		return "Range Not Satisfiable";
	case 417:
		return "Expectation Failed";
	case 418:
		return "I'm a teapot";
	case 421:
		return "Misdirected Request";
	case 422:
		return "Unprocessable Entity";
	case 423:
		return "Locked";
	case 424:
		return "Failed Dependency";
	case 426:
		return "Upgrade Required";
	case 428:
		return "Precondition Required";
	case 429:
		return "Too Many Requests";
	case 431:
		return "Request Header Fields Too Large";
	case 451:
		return "Unavailable For Legal Reasons";
	case 500:
		return "Internal Server Error";
	case 501:
		return "Not Implemented";
	case 502:
		return "Bad Gateway";
	case 503:
		return "Service Unavailable";
	case 504:
		return "Gateway Timeout";
	case 505:
		return "HTTP Version Not Supported";
	case 506:
		return "Variant Also Negotiates";
	case 507:
		return "Insufficient Storage";
	case 508:
		return "Loop Detected";
	case 510:
		return "Not Extended";
	case 511:
		return "Network Authentication Required";
	default:
		return "Unknown Status";
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = true;
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_buffer__$Buffer_Helper = function() { };
js_node_buffer__$Buffer_Helper.__name__ = true;
js_node_buffer__$Buffer_Helper.bytesOfBuffer = function(b) {
	var o = Object.create(haxe_io_Bytes.prototype);
	o.length = b.byteLength;
	o.b = b;
	b.bufferValue = b;
	b.hxBytes = o;
	b.bytes = b;
	return o;
};
var js_npm_Express = require("express");
var js_npm_express_Router = require("express").Router;
var js_npm_express_Static = require("express").static;
var server_Config = function() { };
server_Config.__name__ = true;
var server_Main = function() { };
server_Main.__name__ = true;
server_Main.main = function() {
	server_Main.app.set("view engine","ejs");
	server_Main.app.use("/assets",new js_npm_express_Static(path.join(__dirname,"..","..","..","assets")));
	server_Main.app.use(server_Routes.apiRouter());
	server_Main.app.use("/tink_api",function(req,res) {
		server_TinkAPI.main(req,res);
		return;
	});
	server_Main.app.listen(server_Config.SERVER_PORT);
};
var server_Routes = function() { };
server_Routes.__name__ = true;
server_Routes.apiRouter = function() {
	var bodyParser = require("body-parser");
	var db = require("db");
	var router = js_npm_express_Router();
	router.use(bodyParser.json());
	router.get("/api/users",function(req,res) {
		res.json(db.users);
		return;
	});
	router.get("/api/user/:userId",function(req1,res1) {
		var userId = req1.params.userId;
		var tmp = db.getUserById(userId);
		res1.json(tmp);
		return;
	});
	router.post("/api/set-user",function(req2,res2) {
		res2.send("ok");
	});
	return router;
};
var server_Root = function() {
};
server_Root.__name__ = true;
server_Root.prototype = {
	hello: function(name) {
		if(name == null) {
			name = "World";
		}
		return { slideshow : { title : "Look!", author : "Mr. Bean", date : "2018-08-08", slides : [{ title : "Woohoo", type : "silly", items : ["item_foo","item_bar"]}]}};
	}
};
var tink_web_routing_Router0 = function(target) {
	this.target = target;
};
tink_web_routing_Router0.__name__ = true;
tink_web_routing_Router0.prototype = {
	route: function(ctx) {
		var l = ctx.parts.length - ctx.depth;
		var _g = l > 2;
		var _g1 = l > 1;
		var _g3 = ctx.part(1);
		var _g4 = ctx.part(0);
		if(ctx.request.header.method == "GET") {
			switch(l > 0) {
			case false:
				return tink_core__$Promise_Promise_$Impl_$.ofSpecific(this.hello(ctx,null));
			case true:
				if(_g4 == "print") {
					if(_g1 == true) {
						if(_g == false) {
							var name = _g3;
							return tink_core__$Promise_Promise_$Impl_$.ofSpecific(this.hello(ctx,name));
						} else {
							var this1 = ctx.request.header.url;
							return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(new tink_core_TypedError(404,"Not Found: [" + ctx.request.header.method + "] " + (this1.query == null ? this1.path : this1.path + "?" + this1.query),{ fileName : "src/hx/server/TinkAPI.hx", lineNumber : 42, className : "tink.web.routing.Router0", methodName : "route"}))));
						}
					} else {
						var this2 = ctx.request.header.url;
						return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(new tink_core_TypedError(404,"Not Found: [" + ctx.request.header.method + "] " + (this2.query == null ? this2.path : this2.path + "?" + this2.query),{ fileName : "src/hx/server/TinkAPI.hx", lineNumber : 42, className : "tink.web.routing.Router0", methodName : "route"}))));
					}
				} else {
					var this3 = ctx.request.header.url;
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(new tink_core_TypedError(404,"Not Found: [" + ctx.request.header.method + "] " + (this3.query == null ? this3.path : this3.path + "?" + this3.query),{ fileName : "src/hx/server/TinkAPI.hx", lineNumber : 42, className : "tink.web.routing.Router0", methodName : "route"}))));
				}
				break;
			}
		} else {
			var this4 = ctx.request.header.url;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(new tink_core_TypedError(404,"Not Found: [" + ctx.request.header.method + "] " + (this4.query == null ? this4.path : this4.path + "?" + this4.query),{ fileName : "src/hx/server/TinkAPI.hx", lineNumber : 42, className : "tink.web.routing.Router0", methodName : "route"}))));
		}
	}
	,hello: function(ctx,name) {
		var d = this.target;
		var d1;
		if(name == null) {
			d1 = null;
		} else {
			var _g = tink__$Stringly_Stringly_$Impl_$.parse(name,function(s) {
				return s;
			});
			switch(_g._hx_index) {
			case 0:
				var v = _g.data;
				d1 = v;
				break;
			case 1:
				var e = _g.failure;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
			}
		}
		return tink_core__$Promise_Promise_$Impl_$.next(new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(d.hello(d1)))),function(__data__) {
			if(ctx.accepts("application/json")) {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_web_routing__$Response_Response_$Impl_$.textual(200,"application/json",new tink_json_Writer0().write(__data__),[]))));
			}
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(new tink_core_TypedError(415,"Unsupported Media Type",{ fileName : "src/hx/server/TinkAPI.hx", lineNumber : 21, className : "tink.web.routing.Router0", methodName : "hello"}))));
		});
	}
};
var tink_http_containers_NodeContainer = function() { };
tink_http_containers_NodeContainer.__name__ = true;
tink_http_containers_NodeContainer.toNodeHandler = function(handler) {
	return function(req,res) {
		var req1 = req.socket.remoteAddress;
		var tmp = tink_http_IncomingRequestHeader.fromIncomingMessage(req);
		var options = null;
		if(options == null) {
			options = { };
		}
		var tmp1 = tink_http_IncomingRequestBody.Plain(tink_io_nodejs_NodejsSource.wrap("Incoming HTTP message from " + req.socket.remoteAddress,req,options.chunkSize,options.onEnd));
		handler.process(new tink_http_IncomingRequest(req1,tmp,tmp1)).handle(function(out) {
			var out1 = out.header.statusCode;
			var out2 = out.header.reason;
			var _g = [];
			var h = HxOverrides.iter(out.header.fields);
			while(h.hasNext()) {
				var h1 = h.next();
				_g.push([h1.name,h1.value]);
			}
			res.writeHead(out1,out2,_g);
			tink_io__$Source_Source_$Impl_$.pipeTo(out.body,tink_io_nodejs_NodejsSink.wrap("Outgoing HTTP response to " + req.socket.remoteAddress,res)).handle(function(x) {
				res.end();
			});
		});
	};
};
var tink_http_Header = function(fields) {
	var tmp;
	if(fields == null) {
		tmp = [];
	} else {
		var v = fields;
		tmp = v;
	}
	this.fields = tmp;
};
tink_http_Header.__name__ = true;
tink_http_Header.prototype = {
	get: function(name) {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.fields;
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			if(f.name == name) {
				_g.push(f.value);
			}
		}
		return _g;
	}
};
var tink_http_RequestHeader = function(method,url,protocol,fields) {
	if(protocol == null) {
		protocol = "HTTP/1.1";
	}
	this.method = method;
	this.url = url;
	this.protocol = protocol;
	tink_http_Header.call(this,fields);
};
tink_http_RequestHeader.__name__ = true;
tink_http_RequestHeader.__super__ = tink_http_Header;
tink_http_RequestHeader.prototype = $extend(tink_http_Header.prototype,{
});
var tink_http_IncomingRequestHeader = function(method,url,protocol,fields) {
	tink_http_RequestHeader.call(this,method,url,protocol,fields);
};
tink_http_IncomingRequestHeader.__name__ = true;
tink_http_IncomingRequestHeader.fromIncomingMessage = function(req) {
	var req1 = req.method;
	var tmp = tink__$Url_Url_$Impl_$.fromString(req.url);
	var tmp1 = "HTTP/" + req.httpVersion;
	var _g = [];
	var _g1 = 0;
	var _g2 = req.rawHeaders.length / 2 | 0;
	while(_g1 < _g2) {
		var i = _g1++;
		var this1 = req.rawHeaders[2 * i].toLowerCase();
		_g.push(new tink_http_HeaderField(this1,req.rawHeaders[2 * i + 1]));
	}
	return new tink_http_IncomingRequestHeader(req1,tmp,tmp1,_g);
};
tink_http_IncomingRequestHeader.__super__ = tink_http_RequestHeader;
tink_http_IncomingRequestHeader.prototype = $extend(tink_http_RequestHeader.prototype,{
});
var tink__$Url_Url_$Impl_$ = {};
tink__$Url_Url_$Impl_$.__name__ = true;
tink__$Url_Url_$Impl_$.fromString = function(s) {
	return tink__$Url_Url_$Impl_$.parse(s);
};
tink__$Url_Url_$Impl_$.noop = function(_) {
};
tink__$Url_Url_$Impl_$.parse = function(s,onError) {
	if(s == null) {
		return tink__$Url_Url_$Impl_$.parse("");
	}
	if(onError == null) {
		onError = tink__$Url_Url_$Impl_$.noop;
	}
	s = StringTools.trim(s);
	if(StringTools.startsWith(s,"data:")) {
		var this1 = { scheme : "data", payload : HxOverrides.substr(s,5,null)};
		return this1;
	}
	var FORMAT = new EReg("^(([a-zA-Z][a-zA-Z0-9\\-+.]*):)?((//(([^@/]+)@)?([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?)$","");
	var HOST = new EReg("^(\\[(.*)\\]|([^:]*))(:(.*))?$","");
	FORMAT.match(s);
	var hosts;
	var _g = FORMAT.matched(7);
	if(_g == null) {
		hosts = [];
	} else {
		var v = _g;
		var _g1 = [];
		var _g11 = 0;
		var _g2 = v.split(",");
		while(_g11 < _g2.length) {
			var host = _g2[_g11];
			++_g11;
			HOST.match(host);
			var host1;
			var _g12 = HOST.matched(2);
			var _g21 = HOST.matched(3);
			if(_g12 == null) {
				var ipv4 = _g21;
				host1 = ipv4;
			} else if(_g21 == null) {
				var ipv6 = _g12;
				host1 = "[" + ipv6 + "]";
			} else {
				onError("invalid host " + host);
				host1 = null;
			}
			var port;
			var _g3 = HOST.matched(5);
			if(_g3 == null) {
				port = null;
			} else {
				var v1 = _g3;
				var _g31 = Std.parseInt(v1);
				if(_g31 == null) {
					onError("invalid port " + v1);
					port = null;
				} else {
					var p = _g31;
					port = p;
				}
			}
			_g1.push(tink_url__$Host_Host_$Impl_$._new(host1,port));
		}
		hosts = _g1;
	}
	var path = FORMAT.matched(8);
	if(hosts.length > 0 && path.charAt(0) != "/") {
		path = "/" + path;
	}
	var this2 = { scheme : FORMAT.matched(2), payload : FORMAT.matched(3), host : hosts[0], hosts : hosts, auth : FORMAT.matched(6), path : tink_url__$Path_Path_$Impl_$.ofString(path), query : FORMAT.matched(10), hash : FORMAT.matched(12)};
	return this2;
};
var tink_url__$Host_Host_$Impl_$ = {};
tink_url__$Host_Host_$Impl_$.__name__ = true;
tink_url__$Host_Host_$Impl_$._new = function(name,port) {
	var this1;
	if(port == null) {
		this1 = name;
	} else if(port > 65535 || port <= 0) {
		throw new js__$Boot_HaxeError("Invalid port");
	} else {
		this1 = "" + name + ":" + port;
	}
	return this1;
};
var tink_url__$Path_Path_$Impl_$ = {};
tink_url__$Path_Path_$Impl_$.__name__ = true;
tink_url__$Path_Path_$Impl_$.parts = function(this1) {
	var _g = [];
	var _g1 = 0;
	var _g2 = this1.split("/");
	while(_g1 < _g2.length) {
		var p = _g2[_g1];
		++_g1;
		if(p != "") {
			var this2 = p;
			_g.push(this2);
		}
	}
	return _g;
};
tink_url__$Path_Path_$Impl_$.ofString = function(s) {
	var this1 = tink_url__$Path_Path_$Impl_$.normalize(s);
	return this1;
};
tink_url__$Path_Path_$Impl_$.normalize = function(s) {
	s = StringTools.trim(StringTools.replace(s,"\\","/"));
	if(s == ".") {
		return "./";
	}
	var isDir = StringTools.endsWith(s,"/..") || StringTools.endsWith(s,"/") || StringTools.endsWith(s,"/.");
	var parts = [];
	var isAbsolute = StringTools.startsWith(s,"/");
	var up = 0;
	var _g = 0;
	var _g1 = s.split("/");
	while(_g < _g1.length) {
		var part = _g1[_g];
		++_g;
		var _g2 = StringTools.trim(part);
		switch(_g2) {
		case "":
			break;
		case ".":
			break;
		case "..":
			if(parts.pop() == null) {
				++up;
			}
			break;
		default:
			var v = _g2;
			parts.push(v);
		}
	}
	if(isAbsolute) {
		parts.unshift("");
	} else {
		var _g21 = 0;
		var _g3 = up;
		while(_g21 < _g3) {
			var i = _g21++;
			parts.unshift("..");
		}
	}
	if(isDir) {
		parts.push("");
	}
	return parts.join("/");
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
tink_core_NamedWith.__name__ = true;
var tink_http_HeaderField = function(name,value) {
	tink_core_NamedWith.call(this,name,value);
};
tink_http_HeaderField.__name__ = true;
tink_http_HeaderField.__super__ = tink_core_NamedWith;
tink_http_HeaderField.prototype = $extend(tink_core_NamedWith.prototype,{
});
var tink_http_IncomingRequestBody = $hxEnums["tink.http.IncomingRequestBody"] = { __ename__ : true, __constructs__ : ["Plain","Parsed"]
	,Plain: ($_=function(source) { return {_hx_index:0,source:source,__enum__:"tink.http.IncomingRequestBody",toString:$estr}; },$_.__params__ = ["source"],$_)
	,Parsed: ($_=function(parts) { return {_hx_index:1,parts:parts,__enum__:"tink.http.IncomingRequestBody",toString:$estr}; },$_.__params__ = ["parts"],$_)
};
var tink_streams_StreamBase = function() {
};
tink_streams_StreamBase.__name__ = true;
tink_streams_StreamBase.prototype = {
	get_depleted: function() {
		return false;
	}
	,prepend: function(other) {
		if(this.get_depleted()) {
			return other;
		} else {
			return tink_streams__$Stream_CompoundStream.of([other,this]);
		}
	}
	,decompose: function(into) {
		if(!this.get_depleted()) {
			into.push(this);
		}
	}
	,forEach: function(handler) {
		throw new js__$Boot_HaxeError("not implemented");
	}
};
var tink_streams_Generator = function(upcoming) {
	tink_streams_StreamBase.call(this);
	this.upcoming = upcoming;
};
tink_streams_Generator.__name__ = true;
tink_streams_Generator.__super__ = tink_streams_StreamBase;
tink_streams_Generator.prototype = $extend(tink_streams_StreamBase.prototype,{
	forEach: function(handler) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			_gthis.upcoming.handle(function(e) {
				switch(e._hx_index) {
				case 0:
					var then = e.next;
					var v = e.value;
					handler(v).handle(function(s) {
						switch(s._hx_index) {
						case 0:
							cb(tink_streams_Conclusion.Halted(_gthis));
							break;
						case 1:
							cb(tink_streams_Conclusion.Halted(then));
							break;
						case 2:
							then.forEach(handler).handle(cb);
							break;
						case 3:
							var e1 = s.e;
							cb(tink_streams_Conclusion.Clogged(e1,_gthis));
							break;
						}
					});
					break;
				case 1:
					var e2 = e.e;
					cb(tink_streams_Conclusion.Failed(e2));
					break;
				case 2:
					cb(tink_streams_Conclusion.Depleted);
					break;
				}
			});
		},true);
	}
});
var tink_io_nodejs_NodejsSource = function(target) {
	tink_streams_Generator.call(this,tink_core__$Future_Future_$Impl_$.async(function(cb) {
		target.read().handle(function(o) {
			var tmp;
			switch(o._hx_index) {
			case 0:
				var _g = o.data;
				if(_g == null) {
					tmp = tink_streams_Step.End;
				} else {
					var chunk = _g;
					tmp = tink_streams_Step.Link(chunk,new tink_io_nodejs_NodejsSource(target));
				}
				break;
			case 1:
				var e = o.failure;
				tmp = tink_streams_Step.Fail(e);
				break;
			}
			cb(tmp);
		});
	},true));
};
tink_io_nodejs_NodejsSource.__name__ = true;
tink_io_nodejs_NodejsSource.wrap = function(name,native,chunkSize,onEnd) {
	return new tink_io_nodejs_NodejsSource(new tink_io_nodejs_WrappedReadable(name,native,chunkSize,onEnd));
};
tink_io_nodejs_NodejsSource.__super__ = tink_streams_Generator;
tink_io_nodejs_NodejsSource.prototype = $extend(tink_streams_Generator.prototype,{
});
var tink_io_nodejs_WrappedReadable = function(name,native,chunkSize,onEnd) {
	this.name = name;
	this.native = native;
	this.chunkSize = chunkSize;
	this.end = tink_core__$Future_Future_$Impl_$.async(function(cb) {
		native.once("end",function() {
			cb(tink_core_Outcome.Success(null));
		});
		native.once("error",function(e) {
			var tmp = tink_core_Outcome.Failure(new tink_core_TypedError(null,"" + e.code + " - Failed reading from " + name + " because " + e.message,{ fileName : "tink/io/nodejs/WrappedReadable.hx", lineNumber : 21, className : "tink.io.nodejs.WrappedReadable", methodName : "new"}));
			cb(tmp);
		});
	});
	if(onEnd != null) {
		this.end.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
			process.nextTick(onEnd);
		}));
	}
};
tink_io_nodejs_WrappedReadable.__name__ = true;
tink_io_nodejs_WrappedReadable.prototype = {
	read: function() {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.first(tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var attempt = null;
			attempt = function() {
				try {
					var _g = _gthis.native.read(_gthis.chunkSize);
					if(_g == null) {
						_gthis.native.once("readable",attempt);
					} else {
						var chunk = _g;
						var buf = typeof(chunk) == "string" ? new js_node_buffer_Buffer(chunk) : chunk;
						var attempt1 = tink_core_Outcome.Success(new tink_io_nodejs_WrappedBuffer(buf));
						cb(attempt1);
					}
				} catch( e ) {
					var attempt2 = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,"Error while reading from " + _gthis.name,((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "tink/io/nodejs/WrappedReadable.hx", lineNumber : 46, className : "tink.io.nodejs.WrappedReadable", methodName : "read"}));
					cb(attempt2);
				}
			};
			attempt();
		}),this.end);
	}
};
var tink_core_Noise = $hxEnums["tink.core.Noise"] = { __ename__ : true, __constructs__ : ["Noise"]
	,Noise: {_hx_index:0,__enum__:"tink.core.Noise",toString:$estr}
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
tink_core__$Lazy_LazyConst.__name__ = true;
tink_core__$Lazy_LazyConst.prototype = {
	get: function() {
		return this.value;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			return f(_gthis.value);
		});
	}
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
tink_core__$Future_SyncFuture.__name__ = true;
tink_core__$Future_SyncFuture.prototype = {
	map: function(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	,flatMap: function(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	,handle: function(cb) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,this.value.get());
		return null;
	}
	,gather: function() {
		return this;
	}
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = true;
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var ret = new tink_core_FutureTrigger();
	var l1 = this1.handle($bind(ret,ret.trigger));
	var l2 = other.handle($bind(ret,ret.trigger));
	var ret1 = ret;
	if(l1 != null) {
		var this2 = l1;
		ret1.handle(function(_) {
			this2.cancel();
		});
	}
	if(l2 != null) {
		var this3 = l2;
		ret1.handle(function(_1) {
			this3.cancel();
		});
	}
	return ret1;
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return new tink_core__$Future_NestedFuture(f);
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		return new tink_core__$Future_LazyTrigger(f);
	} else {
		var op = new tink_core_FutureTrigger();
		var wrapped = f;
		tink_core__$Callback_Callback_$Impl_$.invoke(wrapped,$bind(op,op.trigger));
		return op;
	}
};
var tink_core_FutureTrigger = function() {
	var this1 = [];
	this.list = this1;
};
tink_core_FutureTrigger.__name__ = true;
tink_core_FutureTrigger.gatherFuture = function(f) {
	var op = null;
	var this1 = new tink_core__$Future_SimpleFuture(function(cb) {
		if(op == null) {
			op = new tink_core_FutureTrigger();
			f.handle($bind(op,op.trigger));
			f = null;
		}
		return op.handle(cb);
	});
	return this1;
};
tink_core_FutureTrigger.prototype = {
	handle: function(callback) {
		var _g = this.list;
		if(_g == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			var v = _g;
			return tink_core__$Callback_CallbackList_$Impl_$.add(v,callback);
		}
	}
	,map: function(f) {
		var _g = this.list;
		if(_g == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				var tmp = f(v1);
				ret.trigger(tmp);
			});
			return ret;
		}
	}
	,flatMap: function(f) {
		var _g = this.list;
		if(_g == null) {
			return f(this.result);
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				f(v1).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	,gather: function() {
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
			tink_core__$Callback_CallbackList_$Impl_$.clear(list);
			return true;
		}
	}
};
var tink_core__$Future_LazyTrigger = function(op) {
	this.op = op;
	tink_core_FutureTrigger.call(this);
};
tink_core__$Future_LazyTrigger.__name__ = true;
tink_core__$Future_LazyTrigger.__super__ = tink_core_FutureTrigger;
tink_core__$Future_LazyTrigger.prototype = $extend(tink_core_FutureTrigger.prototype,{
	eager: function() {
		if(this.op != null) {
			var op = this.op;
			this.op = null;
			tink_core__$Callback_Callback_$Impl_$.invoke(op,$bind(this,this.trigger));
		}
		return this;
	}
	,map: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.map.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					var tmp = f(v);
					cb(tmp);
				});
			},true);
		}
	}
	,flatMap: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.flatMap.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					f(v).handle(cb);
				});
			},true);
		}
	}
	,handle: function(cb) {
		this.eager();
		return tink_core_FutureTrigger.prototype.handle.call(this,cb);
	}
});
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = true;
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	if(tink_core__$Callback_Callback_$Impl_$.depth < 500) {
		tink_core__$Callback_Callback_$Impl_$.depth++;
		this1(data);
		tink_core__$Callback_Callback_$Impl_$.depth--;
	} else {
		var _e = this1;
		var f = function(data1) {
			tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
		};
		var data2 = data;
		tink_core__$Callback_Callback_$Impl_$.defer(function() {
			f(data2);
		});
	}
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	return f;
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	process.nextTick(f);
};
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__ : true, __constructs__ : ["Success","Failure"]
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["failure"],$_)
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = true;
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		var _g = tink_core_TypedError.asError(e1);
		var tmp;
		if(_g == null) {
			tmp = report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e1,pos) : report(e1);
		} else {
			var e2 = _g;
			tmp = e2;
		}
		return tink_core_Outcome.Failure(tmp);
	}
};
var tink_streams_Step = $hxEnums["tink.streams.Step"] = { __ename__ : true, __constructs__ : ["Link","Fail","End"]
	,Link: ($_=function(value,next) { return {_hx_index:0,value:value,next:next,__enum__:"tink.streams.Step",toString:$estr}; },$_.__params__ = ["value","next"],$_)
	,Fail: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"tink.streams.Step",toString:$estr}; },$_.__params__ = ["e"],$_)
	,End: {_hx_index:2,__enum__:"tink.streams.Step",toString:$estr}
};
var tink_http_Message = function(header,body) {
	this.header = header;
	this.body = body;
};
tink_http_Message.__name__ = true;
var tink_http_IncomingRequest = function(clientIp,header,body) {
	this.clientIp = clientIp;
	tink_http_Message.call(this,header,body);
};
tink_http_IncomingRequest.__name__ = true;
tink_http_IncomingRequest.__super__ = tink_http_Message;
tink_http_IncomingRequest.prototype = $extend(tink_http_Message.prototype,{
});
var tink_streams_Empty = function() {
	tink_streams_StreamBase.call(this);
};
tink_streams_Empty.__name__ = true;
tink_streams_Empty.__super__ = tink_streams_StreamBase;
tink_streams_Empty.prototype = $extend(tink_streams_StreamBase.prototype,{
	get_depleted: function() {
		return true;
	}
	,forEach: function(handler) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Conclusion.Depleted));
	}
});
var tink_io__$Source_Source_$Impl_$ = {};
tink_io__$Source_Source_$Impl_$.__name__ = true;
tink_io__$Source_Source_$Impl_$.pipeTo = function(this1,target,options) {
	return target.consume(this1,options);
};
var tink_io_SinkBase = function() { };
tink_io_SinkBase.__name__ = true;
tink_io_SinkBase.prototype = {
	consume: function(source,options) {
		throw new js__$Boot_HaxeError("not implemented");
	}
};
var tink_io_nodejs_NodejsSink = function(target) {
	this.target = target;
};
tink_io_nodejs_NodejsSink.__name__ = true;
tink_io_nodejs_NodejsSink.wrap = function(name,native) {
	return new tink_io_nodejs_NodejsSink(new tink_io_nodejs_WrappedWritable(name,native));
};
tink_io_nodejs_NodejsSink.__super__ = tink_io_SinkBase;
tink_io_nodejs_NodejsSink.prototype = $extend(tink_io_SinkBase.prototype,{
	consume: function(source,options) {
		var _gthis = this;
		var ret = source.forEach(tink_streams__$Stream_Handler_$Impl_$.ofUnknown(function(c) {
			var ret1 = _gthis.target.write(c).map(function(w) {
				switch(w._hx_index) {
				case 0:
					switch(w.data) {
					case false:
						return tink_streams_Handled.BackOff;
					case true:
						return tink_streams_Handled.Resume;
					}
					break;
				case 1:
					var e = w.failure;
					return tink_streams_Handled.Clog(e);
				}
			});
			return ret1.gather();
		}));
		if(options != null && options.end) {
			ret.handle(function(end) {
				_gthis.target.end();
			});
		}
		var ret2 = ret.map(function(c1) {
			return tink_io_PipeResultTools.toResult(c1,tink_core_Noise.Noise);
		});
		return ret2.gather();
	}
});
var tink_io_nodejs_WrappedWritable = function(name,native) {
	this.name = name;
	this.native = native;
	this.ended = tink_core__$Future_Future_$Impl_$.async(function(cb) {
		native.once("end",function() {
			cb(tink_core_Outcome.Success(false));
		});
		native.once("finish",function() {
			cb(tink_core_Outcome.Success(false));
		});
		native.once("close",function() {
			cb(tink_core_Outcome.Success(false));
		});
		native.on("error",function(e) {
			var tmp = tink_core_Outcome.Failure(new tink_core_TypedError(null,"" + e.code + ": " + e.message,{ fileName : "tink/io/nodejs/WrappedWritable.hx", lineNumber : 22, className : "tink.io.nodejs.WrappedWritable", methodName : "new"}));
			cb(tmp);
		});
	});
};
tink_io_nodejs_WrappedWritable.__name__ = true;
tink_io_nodejs_WrappedWritable.prototype = {
	end: function() {
		var didEnd = false;
		var this1 = this.ended.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
			didEnd = true;
		}));
		if(this1 != null) {
			this1.cancel();
		}
		if(didEnd) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(false)));
		}
		this.native.end();
		return tink_core__$Promise_Promise_$Impl_$.next(this.ended,function(_) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(true)));
		});
	}
	,write: function(chunk) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.first(tink_core__$Future_Future_$Impl_$.async(function(cb) {
			if(chunk.getLength() == 0) {
				cb(tink_core_Outcome.Success(true));
				return;
			}
			var buf;
			if(js_node_buffer_Buffer.isBuffer(chunk.buffer)) {
				buf = chunk.buffer;
			} else {
				var b = chunk.toBytes();
				var data = b.b;
				buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,b.length);
			}
			var f = cb;
			var a1 = tink_core_Outcome.Success(true);
			var tmp = function() {
				f(a1);
			};
			_gthis.native.write(buf,tmp);
		}),this.ended);
	}
};
var tink_web_routing_Context = function(parent,accepts,request,depth,parts,params) {
	this.parent = parent;
	this.accepts = accepts;
	this.request = request;
	this.depth = depth;
	this.parts = parts;
	this.params = params;
};
tink_web_routing_Context.__name__ = true;
tink_web_routing_Context.ofRequest = function(request) {
	return new tink_web_routing_Context(null,tink_web_routing_Context.parseAcceptHeader(request.header),request,0,tink_url__$Path_Path_$Impl_$.parts(request.header.url.path),tink_url__$Query_Query_$Impl_$.toMap(request.header.url.query));
};
tink_web_routing_Context.parseAcceptHeader = function(h) {
	var _g = h.get("accept");
	if(_g.length == 0) {
		return tink_web_routing_Context.acceptsAll;
	} else {
		var values = _g;
		var _g1 = new haxe_ds_StringMap();
		var _g11 = 0;
		while(_g11 < values.length) {
			var v = values[_g11];
			++_g11;
			var _g12 = 0;
			var _g2 = tink_http__$Header_HeaderValue_$Impl_$.parse(v);
			while(_g12 < _g2.length) {
				var part = _g2[_g12];
				++_g12;
				var key = part.value;
				if(__map_reserved[key] != null) {
					_g1.setReserved(key,true);
				} else {
					_g1.h[key] = true;
				}
			}
		}
		var accepted = _g1;
		if(__map_reserved["*/*"] != null ? accepted.getReserved("*/*") : accepted.h["*/*"]) {
			return tink_web_routing_Context.acceptsAll;
		} else {
			return function(t) {
				if(__map_reserved[t] != null) {
					return accepted.existsReserved(t);
				} else {
					return accepted.h.hasOwnProperty(t);
				}
			};
		}
	}
};
tink_web_routing_Context.acceptsAll = function(s) {
	return true;
};
tink_web_routing_Context.prototype = {
	part: function(index) {
		if(this.depth + index >= this.parts.length) {
			return "";
		} else {
			return tink_url__$Portion_Portion_$Impl_$.stringly(this.parts[this.depth + index]);
		}
	}
};
var tink_http__$Header_HeaderValue_$Impl_$ = {};
tink_http__$Header_HeaderValue_$Impl_$.__name__ = true;
tink_http__$Header_HeaderValue_$Impl_$.parse = function(this1) {
	return tink_http__$Header_HeaderValue_$Impl_$.parseWith(this1,function(_,params) {
		var _g = new haxe_ds_StringMap();
		var p = params;
		while(p.hasNext()) {
			var p1 = p.next();
			var key = p1.name;
			var value;
			var _g1 = tink_url__$Portion_Portion_$Impl_$.toString(p1.value);
			var quoted = _g1;
			if(HxOverrides.cca(quoted,0) == 34) {
				value = HxOverrides.substr(quoted,1,quoted.length - 2);
			} else {
				var v = _g1;
				value = v;
			}
			if(__map_reserved[key] != null) {
				_g.setReserved(key,value);
			} else {
				_g.h[key] = value;
			}
		}
		return _g;
	});
};
tink_http__$Header_HeaderValue_$Impl_$.parseWith = function(this1,parseExtension) {
	var _g = [];
	var _g1 = 0;
	var _g2 = this1.split(",");
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		v = StringTools.trim(v);
		var i;
		var _g11 = v.indexOf(";");
		if(_g11 == -1) {
			i = v.length;
		} else {
			var i1 = _g11;
			i = i1;
		}
		var value = HxOverrides.substr(v,0,i);
		_g.push({ value : value, extensions : parseExtension(value,new tink_url__$Query_QueryStringParser(v,";","=",i + 1))});
	}
	return _g;
};
var tink_url__$Query_QueryStringParser = function(s,sep,set,pos) {
	this.s = s == null ? "" : s;
	this.sep = sep;
	this.set = set;
	this.pos = pos;
};
tink_url__$Query_QueryStringParser.__name__ = true;
tink_url__$Query_QueryStringParser.trimmedSub = function(s,start,end) {
	if(start >= s.length) {
		var this1 = "";
		return this1;
	}
	while(s.charCodeAt(start) < 33) ++start;
	if(end < s.length - 1) {
		while(s.charCodeAt(end - 1) < 33) --end;
	}
	var this2 = s.substring(start,end);
	return this2;
};
tink_url__$Query_QueryStringParser.prototype = {
	hasNext: function() {
		return this.pos < this.s.length;
	}
	,next: function() {
		var next = this.s.indexOf(this.sep,this.pos);
		if(next == -1) {
			next = this.s.length;
		}
		var split = this.s.indexOf(this.set,this.pos);
		var start = this.pos;
		this.pos = next + this.sep.length;
		if(split == -1 || split > next) {
			return new tink_core_NamedWith(tink_url__$Portion_Portion_$Impl_$.stringly(tink_url__$Query_QueryStringParser.trimmedSub(this.s,start,next)),tink_url__$Portion_Portion_$Impl_$.ofString(""));
		} else {
			return new tink_core_NamedWith(tink_url__$Portion_Portion_$Impl_$.stringly(tink_url__$Query_QueryStringParser.trimmedSub(this.s,start,split)),tink_url__$Query_QueryStringParser.trimmedSub(this.s,split + this.set.length,next));
		}
	}
};
var tink_url__$Portion_Portion_$Impl_$ = {};
tink_url__$Portion_Portion_$Impl_$.__name__ = true;
tink_url__$Portion_Portion_$Impl_$.stringly = function(this1) {
	return tink_url__$Portion_Portion_$Impl_$.toString(this1);
};
tink_url__$Portion_Portion_$Impl_$.toString = function(this1) {
	if(this1 == null) {
		return null;
	} else {
		return decodeURIComponent(this1.split("+").join(" "));
	}
};
tink_url__$Portion_Portion_$Impl_$.ofString = function(s) {
	var this1 = s == null ? "" : encodeURIComponent(s);
	return this1;
};
var tink_url__$Query_Query_$Impl_$ = {};
tink_url__$Query_Query_$Impl_$.__name__ = true;
tink_url__$Query_Query_$Impl_$.toMap = function(this1) {
	var _g = new haxe_ds_StringMap();
	var p = new tink_url__$Query_QueryStringParser(this1,"&","=",0);
	while(p.hasNext()) {
		var p1 = p.next();
		var key = p1.name.toString();
		var value = p1.value;
		if(__map_reserved[key] != null) {
			_g.setReserved(key,value);
		} else {
			_g.h[key] = value;
		}
	}
	return _g;
};
var tink_core__$Promise_Recover_$Impl_$ = {};
tink_core__$Promise_Recover_$Impl_$.__name__ = true;
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_http__$Response_OutgoingResponse_$Impl_$ = {};
tink_http__$Response_OutgoingResponse_$Impl_$.__name__ = true;
tink_http__$Response_OutgoingResponse_$Impl_$.blob = function(code,chunk,contentType,headers) {
	if(code == null) {
		code = 200;
	}
	var this1 = httpstatus__$HttpStatusMessage_HttpStatusMessage_$Impl_$.fromCode(code);
	var this2 = "Content-Type".toLowerCase();
	var fields = new tink_http_HeaderField(this2,contentType);
	var this3 = "Content-Length".toLowerCase();
	var fields1 = Std.string(chunk.getLength());
	var fields2;
	if(headers == null) {
		fields2 = [];
	} else {
		var v = headers;
		fields2 = v;
	}
	var this4 = new tink_http_ResponseHeaderBase(code,this1,[fields,new tink_http_HeaderField(this3,fields1)].concat(fields2),"HTTP/1.1");
	var this5 = new tink_http__$Response_OutgoingResponseData(this4,new tink_streams_Single(new tink_core__$Lazy_LazyConst(chunk)));
	return this5;
};
tink_http__$Response_OutgoingResponse_$Impl_$.reportError = function(e) {
	var code = e.code;
	if(code < 100 || code > 999) {
		code = 500;
	}
	var reason = httpstatus__$HttpStatusMessage_HttpStatusMessage_$Impl_$.fromCode(code);
	var this1 = "Content-Type".toLowerCase();
	var this2 = new tink_http_ResponseHeaderBase(code,reason,[new tink_http_HeaderField(this1,"application/json")],"HTTP/1.1");
	var this3 = new tink_http__$Response_OutgoingResponseData(this2,new tink_streams_Single(new tink_core__$Lazy_LazyConst(tink_chunk_ByteChunk.of(haxe_io_Bytes.ofString(JSON.stringify({ error : e.message, details : e.data}))))));
	return this3;
};
var tink_http_ResponseHeaderBase = function(statusCode,reason,fields,protocol) {
	if(protocol == null) {
		protocol = "HTTP/1.1";
	}
	this.statusCode = statusCode;
	var tmp;
	if(reason == null) {
		var this1 = httpstatus__$HttpStatusMessage_HttpStatusMessage_$Impl_$.fromCode(statusCode);
		tmp = this1;
	} else {
		tmp = reason;
	}
	this.reason = tmp;
	this.protocol = protocol;
	tink_http_Header.call(this,fields);
};
tink_http_ResponseHeaderBase.__name__ = true;
tink_http_ResponseHeaderBase.__super__ = tink_http_Header;
tink_http_ResponseHeaderBase.prototype = $extend(tink_http_Header.prototype,{
});
var tink_chunk_ChunkBase = function() { };
tink_chunk_ChunkBase.__name__ = true;
var tink_chunk_ByteChunk = function(data,from,to) {
	this.data = data;
	this.from = from;
	this.to = to;
};
tink_chunk_ByteChunk.__name__ = true;
tink_chunk_ByteChunk.of = function(b) {
	if(b.length == 0) {
		return tink__$Chunk_Chunk_$Impl_$.EMPTY;
	}
	var ret = new tink_chunk_ByteChunk(b.b.bufferValue,0,b.length);
	ret.wrapped = b;
	return ret;
};
tink_chunk_ByteChunk.__super__ = tink_chunk_ChunkBase;
tink_chunk_ByteChunk.prototype = $extend(tink_chunk_ChunkBase.prototype,{
	getLength: function() {
		return this.to - this.from;
	}
	,toBytes: function() {
		if(this.wrapped == null) {
			this.wrapped = haxe_io_Bytes.ofData(this.data);
		}
		return this.wrapped.sub(this.from,this.to - this.from);
	}
});
var tink__$Chunk_EmptyChunk = function() {
};
tink__$Chunk_EmptyChunk.__name__ = true;
tink__$Chunk_EmptyChunk.__super__ = tink_chunk_ChunkBase;
tink__$Chunk_EmptyChunk.prototype = $extend(tink_chunk_ChunkBase.prototype,{
	getLength: function() {
		return 0;
	}
	,toBytes: function() {
		return tink__$Chunk_EmptyChunk.EMPTY;
	}
});
var tink__$Chunk_Chunk_$Impl_$ = {};
tink__$Chunk_Chunk_$Impl_$.__name__ = true;
var tink_streams_Single = function(value) {
	tink_streams_StreamBase.call(this);
	this.value = value;
};
tink_streams_Single.__name__ = true;
tink_streams_Single.__super__ = tink_streams_StreamBase;
tink_streams_Single.prototype = $extend(tink_streams_StreamBase.prototype,{
	forEach: function(handle) {
		var _gthis = this;
		var ret = handle(this.value.get()).map(function(step) {
			switch(step._hx_index) {
			case 0:
				return tink_streams_Conclusion.Halted(_gthis);
			case 1:
				return tink_streams_Conclusion.Halted(tink_streams_Empty.inst);
			case 2:
				return tink_streams_Conclusion.Depleted;
			case 3:
				var e = step.e;
				return tink_streams_Conclusion.Clogged(e,_gthis);
			}
		});
		return ret.gather();
	}
});
var tink_http__$Response_OutgoingResponseData = function(header,body) {
	tink_http_Message.call(this,header,body);
};
tink_http__$Response_OutgoingResponseData.__name__ = true;
tink_http__$Response_OutgoingResponseData.__super__ = tink_http_Message;
tink_http__$Response_OutgoingResponseData.prototype = $extend(tink_http_Message.prototype,{
});
var tink_http_SimpleHandler = function(f) {
	this.f = f;
};
tink_http_SimpleHandler.__name__ = true;
tink_http_SimpleHandler.prototype = {
	process: function(req) {
		return this.f(req);
	}
};
var server_TinkAPI = $hx_exports["server"]["TinkAPI"] = function() { };
server_TinkAPI.__name__ = true;
var tink__$Stringly_Stringly_$Impl_$ = {};
tink__$Stringly_Stringly_$Impl_$.__name__ = true;
tink__$Stringly_Stringly_$Impl_$.parse = function(this1,f) {
	var f1 = f;
	var a1 = this1;
	return tink_core_TypedError.catchExceptions(function() {
		return f1(a1);
	},null,{ fileName : "tink/Stringly.hx", lineNumber : 155, className : "tink._Stringly.Stringly_Impl_", methodName : "parse"});
};
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
tink_core_Annex.__name__ = true;
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
tink_core__$Callback_ListCell.__name__ = true;
tink_core__$Callback_ListCell.prototype = {
	clear: function() {
		this.list = null;
		this.cb = null;
	}
	,cancel: function() {
		var _g = this.list;
		if(_g != null) {
			var v = _g;
			this.clear();
			HxOverrides.remove(v,this);
		}
	}
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		cell.clear();
	}
};
var tink_core__$Future_SimpleFuture = function(f) {
	this.f = f;
};
tink_core__$Future_SimpleFuture.__name__ = true;
tink_core__$Future_SimpleFuture.prototype = {
	handle: function(callback) {
		return this.f(callback);
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		});
	}
	,flatMap: function(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f1(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		}));
	}
	,gather: function() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
};
var tink_core__$Future_NestedFuture = function(outer) {
	this.outer = outer;
};
tink_core__$Future_NestedFuture.__name__ = true;
tink_core__$Future_NestedFuture.prototype = {
	map: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.map(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,flatMap: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.flatMap(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,gather: function() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
	,handle: function(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			});
		});
		return ret;
	}
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.f = f;
};
tink_core__$Lazy_LazyFunc.__name__ = true;
tink_core__$Lazy_LazyFunc.prototype = {
	get: function() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
};
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = true;
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
var tink_http_BodyPart = $hxEnums["tink.http.BodyPart"] = { __ename__ : true, __constructs__ : ["Value","File"]
	,Value: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"tink.http.BodyPart",toString:$estr}; },$_.__params__ = ["v"],$_)
	,File: ($_=function(handle) { return {_hx_index:1,handle:handle,__enum__:"tink.http.BodyPart",toString:$estr}; },$_.__params__ = ["handle"],$_)
};
var tink_io_PipeResult = $hxEnums["tink.io.PipeResult"] = { __ename__ : true, __constructs__ : ["AllWritten","SinkEnded","SinkFailed","SourceFailed"]
	,AllWritten: {_hx_index:0,__enum__:"tink.io.PipeResult",toString:$estr}
	,SinkEnded: ($_=function(result,rest) { return {_hx_index:1,result:result,rest:rest,__enum__:"tink.io.PipeResult",toString:$estr}; },$_.__params__ = ["result","rest"],$_)
	,SinkFailed: ($_=function(e,rest) { return {_hx_index:2,e:e,rest:rest,__enum__:"tink.io.PipeResult",toString:$estr}; },$_.__params__ = ["e","rest"],$_)
	,SourceFailed: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"tink.io.PipeResult",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var tink_io_PipeResultTools = function() { };
tink_io_PipeResultTools.__name__ = true;
tink_io_PipeResultTools.toResult = function(c,result,buffered) {
	var mk = function(s) {
		if(buffered == null) {
			return s;
		} else {
			var v = buffered;
			return s.prepend(new tink_streams_Single(new tink_core__$Lazy_LazyConst(v)));
		}
	};
	switch(c._hx_index) {
	case 0:
		var rest = c.rest;
		return tink_io_PipeResult.SinkEnded(result,mk(rest));
	case 1:
		var rest1 = c.at;
		var e = c.error;
		return tink_io_PipeResult.SinkFailed(e,mk(rest1));
	case 2:
		var e1 = c.error;
		return tink_io_PipeResult.SourceFailed(e1);
	case 3:
		return tink_io_PipeResult.AllWritten;
	}
};
var tink_io_nodejs_WrappedBuffer = function(buffer) {
	this.buffer = buffer;
};
tink_io_nodejs_WrappedBuffer.__name__ = true;
tink_io_nodejs_WrappedBuffer.prototype = {
	getLength: function() {
		return this.buffer.length;
	}
	,toBytes: function() {
		var copy = tink_io_nodejs_WrappedBuffer.alloc(this.buffer.length);
		this.buffer.copy(copy);
		return js_node_buffer__$Buffer_Helper.bytesOfBuffer(copy);
	}
};
var tink_json_BasicWriter = function() {
	this.plugins = new tink_core_Annex(this);
};
tink_json_BasicWriter.__name__ = true;
tink_json_BasicWriter.prototype = {
	init: function() {
		var this1 = "";
		this.buf = this1;
	}
};
var tink_json_Writer0 = function() {
	tink_json_BasicWriter.call(this);
};
tink_json_Writer0.__name__ = true;
tink_json_Writer0.__super__ = tink_json_BasicWriter;
tink_json_Writer0.prototype = $extend(tink_json_BasicWriter.prototype,{
	parse0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.slideshow;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"slideshow\":";
		this.parse1(value1);
		this.buf += String.fromCodePoint(125);
	}
	,parse1: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.author;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"author\":";
		var s = JSON.stringify(value1);
		this.buf += s;
		var value2 = value.date;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"date\":";
		var s1 = JSON.stringify(value2);
		this.buf += s1;
		var value3 = value.slides;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"slides\":";
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value3.length) {
			var value4 = value3[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.parse2(value4);
		}
		this.buf += String.fromCodePoint(93);
		var value5 = value.title;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"title\":";
		var s2 = JSON.stringify(value5);
		this.buf += s2;
		this.buf += String.fromCodePoint(125);
	}
	,parse2: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.title;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"title\":";
		var s = JSON.stringify(value1);
		this.buf += s;
		var value2 = value.type;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"type\":";
		var s1 = JSON.stringify(value2);
		this.buf += s1;
		var _g = value.items;
		if(_g != null) {
			var value3 = _g;
			if(__first) {
				__first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += "\"items\":";
			if(value3 == null) {
				this.buf += "null";
			} else {
				this.buf += String.fromCodePoint(91);
				var first = true;
				var _g1 = 0;
				while(_g1 < value3.length) {
					var value4 = value3[_g1];
					++_g1;
					if(first) {
						first = false;
					} else {
						this.buf += String.fromCodePoint(44);
					}
					var s2 = JSON.stringify(value4);
					this.buf += s2;
				}
				this.buf += String.fromCodePoint(93);
			}
		}
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.parse0(value);
		return this.buf.toString();
	}
});
var tink_streams__$Stream_CompoundStream = function(parts) {
	tink_streams_StreamBase.call(this);
	this.parts = parts;
};
tink_streams__$Stream_CompoundStream.__name__ = true;
tink_streams__$Stream_CompoundStream.consumeParts = function(parts,handler,cb) {
	if(parts.length == 0) {
		cb(tink_streams_Conclusion.Depleted);
	} else {
		parts[0].forEach(handler).handle(function(o) {
			switch(o._hx_index) {
			case 0:
				var rest = o.rest;
				parts = parts.slice();
				parts[0] = rest;
				var tmp = tink_streams_Conclusion.Halted(new tink_streams__$Stream_CompoundStream(parts));
				cb(tmp);
				break;
			case 1:
				var at = o.at;
				var e = o.error;
				if(at.get_depleted()) {
					parts = parts.slice(1);
				} else {
					parts = parts.slice();
					parts[0] = at;
				}
				var tmp1 = tink_streams_Conclusion.Clogged(e,new tink_streams__$Stream_CompoundStream(parts));
				cb(tmp1);
				break;
			case 2:
				var e1 = o.error;
				cb(tink_streams_Conclusion.Failed(e1));
				break;
			case 3:
				tink_streams__$Stream_CompoundStream.consumeParts(parts.slice(1),handler,cb);
				break;
			}
		});
	}
};
tink_streams__$Stream_CompoundStream.of = function(streams) {
	var ret = [];
	var _g = 0;
	while(_g < streams.length) {
		var s = streams[_g];
		++_g;
		s.decompose(ret);
	}
	if(ret.length == 0) {
		return tink_streams_Empty.inst;
	} else {
		return new tink_streams__$Stream_CompoundStream(ret);
	}
};
tink_streams__$Stream_CompoundStream.__super__ = tink_streams_StreamBase;
tink_streams__$Stream_CompoundStream.prototype = $extend(tink_streams_StreamBase.prototype,{
	get_depleted: function() {
		switch(this.parts.length) {
		case 0:
			return true;
		case 1:
			return this.parts[0].get_depleted();
		default:
			return false;
		}
	}
	,decompose: function(into) {
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.decompose(into);
		}
	}
	,forEach: function(handler) {
		var parts = this.parts;
		var handler1 = handler;
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			tink_streams__$Stream_CompoundStream.consumeParts(parts,handler1,cb);
		});
	}
});
var tink_streams_Handled = $hxEnums["tink.streams.Handled"] = { __ename__ : true, __constructs__ : ["BackOff","Finish","Resume","Clog"]
	,BackOff: {_hx_index:0,__enum__:"tink.streams.Handled",toString:$estr}
	,Finish: {_hx_index:1,__enum__:"tink.streams.Handled",toString:$estr}
	,Resume: {_hx_index:2,__enum__:"tink.streams.Handled",toString:$estr}
	,Clog: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"tink.streams.Handled",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var tink_streams_Conclusion = $hxEnums["tink.streams.Conclusion"] = { __ename__ : true, __constructs__ : ["Halted","Clogged","Failed","Depleted"]
	,Halted: ($_=function(rest) { return {_hx_index:0,rest:rest,__enum__:"tink.streams.Conclusion",toString:$estr}; },$_.__params__ = ["rest"],$_)
	,Clogged: ($_=function(error,at) { return {_hx_index:1,error:error,at:at,__enum__:"tink.streams.Conclusion",toString:$estr}; },$_.__params__ = ["error","at"],$_)
	,Failed: ($_=function(error) { return {_hx_index:2,error:error,__enum__:"tink.streams.Conclusion",toString:$estr}; },$_.__params__ = ["error"],$_)
	,Depleted: {_hx_index:3,__enum__:"tink.streams.Conclusion",toString:$estr}
};
var tink_streams__$Stream_Handler_$Impl_$ = {};
tink_streams__$Stream_Handler_$Impl_$.__name__ = true;
tink_streams__$Stream_Handler_$Impl_$.ofUnknown = function(f) {
	var this1 = f;
	return this1;
};
var tink_web_routing__$Response_Response_$Impl_$ = {};
tink_web_routing__$Response_Response_$Impl_$.__name__ = true;
tink_web_routing__$Response_Response_$Impl_$.binary = function(code,contentType,bytes,headers) {
	return tink_http__$Response_OutgoingResponse_$Impl_$.blob(code,tink_chunk_ByteChunk.of(bytes),contentType,headers);
};
tink_web_routing__$Response_Response_$Impl_$.textual = function(code,contentType,string,headers) {
	return tink_web_routing__$Response_Response_$Impl_$.binary(code,contentType,haxe_io_Bytes.ofString(string),headers);
};
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.__name__ = true;
Array.__name__ = true;
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
server_Config.process = new js.node.Process();
server_Config.SERVER_PORT = Std.parseInt(server_Config.process.env["PORT"] != null ? server_Config.process.env["PORT"] : "3000");
server_Main.app = new js_npm_Express();
tink_core__$Callback_Callback_$Impl_$.depth = 0;
tink_streams_Empty.inst = new tink_streams_Empty();
tink__$Chunk_EmptyChunk.EMPTY = new haxe_io_Bytes(new ArrayBuffer(0));
tink__$Chunk_Chunk_$Impl_$.EMPTY = new tink__$Chunk_EmptyChunk();
server_TinkAPI.main = (function($this) {
	var $r;
	var router = new tink_web_routing_Router0(new server_Root());
	$r = tink_http_containers_NodeContainer.toNodeHandler(new tink_http_SimpleHandler(function(req) {
		var this1 = tink_web_routing_Context.ofRequest(req);
		var this2 = router.route(this1);
		var f = tink_core__$Promise_Recover_$Impl_$.ofSync(tink_http__$Response_OutgoingResponse_$Impl_$.reportError);
		var ret = this2.flatMap(function(o) {
			switch(o._hx_index) {
			case 0:
				var d = o.data;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
			case 1:
				var e = o.failure;
				return f(e);
			}
		});
		return ret.gather();
	}));
	return $r;
}(this));
tink_io_nodejs_WrappedBuffer.alloc = "allocUnsafe" in Buffer ? js_node_buffer_Buffer.allocUnsafe : function(size) {
	return new js_node_buffer_Buffer(size);
};
server_Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
